<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

class CreateTblcalendarEventTable extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        Schema::create('tblcalendar_event', function (Blueprint $table) {
            $table->bigIncrements('evn_id')->comment('Event ID. A unique identification of records.');
            $table->string('evn_source', 150)->comment('Source to identify the other entity or table that triggered the event. In the format "<table name>|<1st primary key>[|<2nd primary key>|<3rd primary key>]".');
            $table->unsignedTinyInteger('evn_typ_id')->comment('Event type. Identifies the related event type.');
            $table->string('evn_name')->comment('Name for the event or description of the key highlights of the event.');
            $table->string('evn_url')->comment('URL to redirect the user to a specific link associated with the event.');
            $table->date('evn_date_start')->comment('Date the event starts.');
            $table->date('evn_date_end')->comment('Date the event ends.');
            $table->time('evn_time_start')->comment('Time the event starts.');
            $table->time('evn_time_end')->comment('Time the event ends.');
            $table->unsignedTinyInteger('evn_frequency')->comment('Frequency for recurring events. [0-Once, 1-Daily, 2-Weekly, 3-Monthly, 4-Yearly]');
            $table->unsignedTinyInteger('evn_interval')->comment('Frequency/recurrence interval.');
            $table->unsignedTinyInteger('evn_month')->comment('Numeric representation of a month.');
            $table->string('evn_week', 14)->comment('List of numeric representation of a day in a week separated by character "|".');
            $table->unsignedTinyInteger('evn_day')->comment('Day of the month or the ordinal number of a week day in a month, if week day is specified.');
            $table->unsignedTinyInteger('evn_weekday')->comment('Indicator if week days only and Saturday and Sunday are excluded. [0-No, 1-Yes]');
            $table->text('evn_remarks')->comment('Remarks. Includes but not limited to comments, recommendations, notes, etc.');
            $table->unsignedTinyInteger('evn_system')->comment('Indicator to identify whether the event is generated by the application.');
        });
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        Schema::dropIfExists('tblcalendar_event');
    }
}
